[build-system]
requires = [
    "poetry-core>=1.1.0",
    "pip>=23.0",
    "pytest-runner>=6.0.0",
    #"setuptools>=67.1.0",
    "setuptools_scm[toml]>=7.1.0",
    "wheel>=0.38.4",
]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "cfgenvy"
version = "0.1.0"
description = "Configuration from Environment embedded in yaml."
authors = [
    "Jason Lubken <jlubken@users.noreply.github.com>",
    "Graydon Neill <grayeye@users.noreply.github.com>",
    "Penn Signals <pennsignals@pennmedicine.upenn.edu>"
]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: Unix",
    "Operating System :: POSIX",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: Implementation :: CPython",
    "Topic :: Utilities",
]
license = "MIT"
readme = "readme.md"

[tool.poetry.dependencies]
pyyaml = ">=6.0"
python = ">=3.9"

[tool.poetry.extras]
dev = [
    "astroid",
    "black",
    #"coverage[toml]",
    "flake8",
    "flake8-bugbear",
    "flake8-commas",
    "flake8-comprehensions",
    "flake8-docstrings",
    # "flake8-logging-format",
    "flake8-mutable",
    "flake8-sorted-keys",
    "isort",
    "mypy",
    "pep8-naming",
    "pre-commit",
    "pylint",
    "pytest",
    "pytest-cov",
    "types-pkg-resources",
    "types-pyyaml",
]

[tool.poetry.urls]
Homepage = "https://github.com/pennsignals/cfgenvy"
Source = "https://github.com/pennsignals/cfgenvy"
Tracker = "https://github.com/pennsignals/cfgenvy/issues"

[tool.black]
line-length = 79
target-version = ["py39","py310","py311"]

[tool.coverage.report]
exclude_lines = [
    "raise NotImplementedError()",
    "pragma: nocover",
    "if __name__ == .__main__.:",
]
precision = 2
show_missing = true

[tool.coverage.run]
branch = true
parallel = true

[tool.distutils.bdist_wheel]
python-tag = "py39.py310.py311"

[tool.isort]
include_trailing_comma = true
line_length = 79
multi_line_output = 3
known_first_party = ["cfgenvy"]
default_section = "THIRDPARTY"

[tool.mypy]
follow_imports = "normal"
ignore_missing_imports = false

[tool.pylint.basic]
good-names = '''e,i,logger,Dumper,Loader,'''

[tool.pylint.message_control]
disable = '''duplicate-code'''

[tool.pylint.miscellaneous]
notes = '''FIXME,XXX'''

[tool.pylint.similarities]
min-similarity-lines = 4
ignore-comments = "yes"
ignore-docstrings = "yes"
ignore-imports = "yes"

[tool.pytest.ini_options]
addopts = "-ra --cov=cfgenvy --cov-report=term-missing --strict-markers --ignore=.eggs --tb=short"
testpaths = ["test"]
norecursedirs = ".env .git .venv build dist"
python_files = "test.py tests.py test_*.py *_test.py"

[tool.setuptools]
include-package-data = true

[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools_scm]
local_scheme = "dirty-tag"
